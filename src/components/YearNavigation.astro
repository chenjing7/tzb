---
interface Props {
  availableYears: number[];
  currentYear: number;
  company: string;
  type: 'mda' | 'letters';
}

const { availableYears, currentYear, company, type } = Astro.props;
---

<div class="year-navigation">
  {availableYears.map(y => (
    <a 
      href={`/tzb/${type}/${company}/${y}`} 
      class={`year-link ${y === currentYear ? 'active' : ''}`}
    >
      {y}å¹´
      {y === currentYear && (
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" fill="none" stroke="currentColor" class="w-3 h-3 ml-1 inline">
          <polyline points="10,3 5,8 10,13" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      )}
    </a>
  ))}
</div>

<style>
  .year-navigation {
    position: sticky;
    top: 2rem;
    height: fit-content;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    gap: 0.25rem;
    font-size: 0.9rem;
    white-space: nowrap;
  }
  
  @media (min-width: 1100px) {
    .year-navigation {
      flex-direction: column;
      gap: 0.75rem;
      padding-top: 1rem;
    }
  }

  @media (max-width: 1100px) {
    .year-navigation {
      position: static;
      justify-content: flex-end;
      margin-bottom: 1rem;
      padding-top: 0;
    }
  }
</style> 